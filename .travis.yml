sudo: false
language: cpp
os:
  - linux
  - osx
compiler:
  - clang

addons:
   apt:
      sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
      packages: ['clang-3.6' , 'zlib1g-dev', 'libbz2-dev', 'libsnappy-dev', 'curl']
env:
  - JOB_NAME=unittests ROCKSDBTESTS_START=db_test ROCKSDBTESTS_END=auto_roll_logger_test
  - JOB_NAME=unittests ROCKSDBTESTS_START=block_test ROCKSDBTESTS_END=inlineskiplist_test
  - JOB_NAME=unittests ROCKSDBTESTS_START=log_test ROCKSDBTESTS_END=document_db_test
  - JOB_NAME=unittests ROCKSDBTESTS_START=json_document_test
  - JOB_NAME=java_test
  - JOB_NAME=lite_build

install:
  # Build gflags
  # TODO(noetzli): Remove when gflags available through Travis
  - pushd /tmp/ && curl -L https://github.com/gflags/gflags/archive/v2.1.2.tar.gz -o gflags.tar.gz && tar xfz gflags.tar.gz && cd gflags-2.1.2 && cmake . && make && popd

before_script:
  # Add gflags to include/library paths
  # TODO(noetzli): Remove when gflags available through Travis
  - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/tmp/gflags-2.1.2/lib"
  - export LIBRARY_PATH="$LIBRARY_PATH:/tmp/gflags-2.1.2/lib"
  - export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:/tmp/gflags-2.1.2/include"
  - if [[ "${TRAVIS_OS_NAME}" == 'linux' ]]; then CXX=clang++-3.6; fi
  - if [[ "${TRAVIS_OS_NAME}" == 'osx' ]]; then brew install gflags snappy; fi
  # Limit the maximum number of open file descriptors to 2000
  - ulimit -n 2000 || true

script:
  - if [[ "${JOB_NAME}" == 'unittests' ]]; then OPT=-DTRAVIS V=1 make -j4 check; fi
  - if [[ "${JOB_NAME}" == 'java_test' ]]; then OPT=-DTRAVIS V=1 make clean jclean rocksdbjava jtest; fi
  - if [[ "${JOB_NAME}" == 'lite_build' ]]; then OPT="-DTRAVIS -DROCKSDB_LITE" V=1 make -j4 static_lib; fi
notifications:
    webhooks:
      - https://buildtimetrend.herokuapp.com/travis
